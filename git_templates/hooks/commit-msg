#!/usr/bin/env bash
set -euo pipefail
 
FILE="$1"
 
# --- helper: get branch name ---
get_branch_name() {
  local branch=""
  branch="$(git symbolic-ref --quiet --short HEAD 2>/dev/null || true)"
  if [ -z "$branch" ]; then
    # Try fallback (e.g., detached HEAD)
    branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || true)"
  fi
  echo "$branch"
}
 
# --- helper: read Jira key ---
get_jira_key() {
  # 1. Try branch name
  local branch
  branch="$(get_branch_name)"
  local key
  key="$(echo "$branch" | grep -Eo '[A-Za-z]{2,}-[0-9]+' || true)"
  if [ -n "$key" ]; then
    echo "${key}"
    return
  fi
 
  # 2. Prompt user interactively
  read -rp "📝 Enter Jira ticket ID (e.g. ABC-123): " key
  echo "$key"
}
 
# --- main ---
JIRA_KEY=""
MSG_CONTENT="$(cat "$FILE")"
 
# Already has a Jira key?
if echo "$MSG_CONTENT" | grep -Eq '\b[A-Za-z]{2,}-[0-9]+\b'; then
  exit 0
fi
 
# Try to get it from branch or prompt
JIRA_KEY="$(get_jira_key)"
 
# Validate input
if [ -z "$JIRA_KEY" ]; then
  echo "❌ Commit message must include a Jira ID (e.g. ABC-123)." >&2
  exit 1
fi
 
# Prepend the Jira key to the commit message
printf "%s %s\n" "$JIRA_KEY:" "$MSG_CONTENT" > "$FILE"
 
echo "✅ Added Jira ID '$JIRA_KEY' to commit message."